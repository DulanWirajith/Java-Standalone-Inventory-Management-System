/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.malintha_agency.views;

import com.malintha_agency.controller.InvoiceChequeController;
import com.malintha_agency.controller.InvoiceController;
import com.malintha_agency.model.Invoice;
import com.malintha_agency.model.Invoice_Cheque;
import com.malintha_agency.view.validation.Validation;

import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ZeeLot
 */
public class Stock_Cheque_Manager extends javax.swing.JPanel {

    /**
     * Creates new form Stock_InvoiceProduct_Manager
     */
    private String invoiceno;
    private String branch;
    private int accountno;
    private String chequeno;
    private String receivedate;
    private String bankingdate;
    private double payment;

    private DateFormat df;
    private DefaultTableModel dtm;
    private int id = -1;
    private int loadInvCheqCount;

    public Stock_Cheque_Manager() {
        initComponents();
        dtm = (DefaultTableModel) tbl_scm_cheques.getModel();
        onLoad();
        tbl_scm_cheques.removeColumn(tbl_scm_cheques.getColumnModel().getColumn(7));
        tbl_scm_cheques.removeColumn(tbl_scm_cheques.getColumnModel().getColumn(6));
        jdc_scm_bankingdate.setDate(new Date());
        jdc_scm_reveivedate.setDate(new Date());
        AutoCompleteDecorator.decorate(cmb_scm_invoiceno);
        AutoCompleteDecorator.decorate(cmb_scm_scn);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        lbl_scm_branch = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_scm_chequeno = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_scm_branch = new javax.swing.JTextField();
        lbl_scm_invoiceno = new javax.swing.JLabel();
        cmb_scm_invoiceno = new javax.swing.JComboBox<>();
        txt_scm_accountno = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btn_scm_remove = new javax.swing.JButton();
        btn_scm_clear = new javax.swing.JButton();
        btn_scm_save = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txt_scm_payment = new javax.swing.JTextField();
        jdc_scm_reveivedate = new com.toedter.calendar.JDateChooser();
        jdc_scm_bankingdate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_scm_cheques = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_scm_scn = new javax.swing.JComboBox<>();

        jPanel3.setOpaque(false);

        lbl_scm_branch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbl_scm_branch.setForeground(new java.awt.Color(102, 102, 102));
        lbl_scm_branch.setText("Branch");
        lbl_scm_branch.setMaximumSize(new java.awt.Dimension(100, 20));
        lbl_scm_branch.setMinimumSize(new java.awt.Dimension(100, 20));
        lbl_scm_branch.setPreferredSize(new java.awt.Dimension(100, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Account No");
        jLabel7.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel7.setMinimumSize(new java.awt.Dimension(100, 20));
        jLabel7.setPreferredSize(new java.awt.Dimension(100, 20));

        txt_scm_chequeno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_scm_chequeno.setMaximumSize(new java.awt.Dimension(6, 21));
        txt_scm_chequeno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_scm_chequenoKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Cheque No");
        jLabel12.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel12.setMinimumSize(new java.awt.Dimension(100, 20));
        jLabel12.setPreferredSize(new java.awt.Dimension(100, 20));

        txt_scm_branch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_scm_branch.setMaximumSize(new java.awt.Dimension(6, 21));

        lbl_scm_invoiceno.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbl_scm_invoiceno.setForeground(new java.awt.Color(102, 102, 102));
        lbl_scm_invoiceno.setText("Invoice No");
        lbl_scm_invoiceno.setMaximumSize(new java.awt.Dimension(100, 20));
        lbl_scm_invoiceno.setMinimumSize(new java.awt.Dimension(100, 20));
        lbl_scm_invoiceno.setPreferredSize(new java.awt.Dimension(100, 20));

        cmb_scm_invoiceno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "21345" }));
        cmb_scm_invoiceno.setMinimumSize(new java.awt.Dimension(79, 21));
        cmb_scm_invoiceno.setName(""); // NOI18N
        cmb_scm_invoiceno.setPreferredSize(new java.awt.Dimension(79, 21));
        cmb_scm_invoiceno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_scm_invoicenoItemStateChanged(evt);
            }
        });
        cmb_scm_invoiceno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_scm_invoicenoActionPerformed(evt);
            }
        });
        cmb_scm_invoiceno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmb_scm_invoicenoKeyPressed(evt);
            }
        });

        txt_scm_accountno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_scm_accountno.setMaximumSize(new java.awt.Dimension(6, 21));
        txt_scm_accountno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_scm_accountnoActionPerformed(evt);
            }
        });
        txt_scm_accountno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_scm_accountnoKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Received Date");
        jLabel9.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel9.setMinimumSize(new java.awt.Dimension(100, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Banking Date");
        jLabel8.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel8.setMinimumSize(new java.awt.Dimension(100, 20));

        btn_scm_remove.setText("Remove");
        btn_scm_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_scm_removeActionPerformed(evt);
            }
        });

        btn_scm_clear.setText("Clear");
        btn_scm_clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_scm_clearMouseClicked(evt);
            }
        });
        btn_scm_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_scm_clearActionPerformed(evt);
            }
        });

        btn_scm_save.setText("Save");
        btn_scm_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_scm_saveMouseClicked(evt);
            }
        });
        btn_scm_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_scm_saveActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Payment");
        jLabel13.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel13.setMinimumSize(new java.awt.Dimension(100, 20));

        txt_scm_payment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_scm_payment.setMaximumSize(new java.awt.Dimension(6, 21));
        txt_scm_payment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_scm_paymentKeyReleased(evt);
            }
        });

        tbl_scm_cheques.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Branch", "AccountNo", "ChequeNo", "Banking Date", "ReceiveDate", "Payment", "InvID", "ICID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_scm_cheques.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_scm_chequesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_scm_cheques);
        if (tbl_scm_cheques.getColumnModel().getColumnCount() > 0) {
            tbl_scm_cheques.getColumnModel().getColumn(0).setResizable(false);
            tbl_scm_cheques.getColumnModel().getColumn(1).setResizable(false);
            tbl_scm_cheques.getColumnModel().getColumn(2).setResizable(false);
            tbl_scm_cheques.getColumnModel().getColumn(3).setResizable(false);
            tbl_scm_cheques.getColumnModel().getColumn(4).setResizable(false);
            tbl_scm_cheques.getColumnModel().getColumn(5).setResizable(false);
            tbl_scm_cheques.getColumnModel().getColumn(6).setResizable(false);
            tbl_scm_cheques.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_scm_invoiceno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_scm_branch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_scm_branch, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .addComponent(txt_scm_accountno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txt_scm_chequeno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_scm_invoiceno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(btn_scm_remove)
                                    .addGap(58, 58, 58)
                                    .addComponent(btn_scm_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_scm_save, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(jdc_scm_bankingdate, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(txt_scm_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jdc_scm_reveivedate, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_scm_invoiceno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdc_scm_reveivedate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_scm_invoiceno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_scm_branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_scm_branch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdc_scm_bankingdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_scm_accountno, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_scm_payment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_scm_clear)
                        .addComponent(btn_scm_remove)
                        .addComponent(btn_scm_save))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_scm_chequeno, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jPanel2.setBackground(new java.awt.Color(78, 44, 211));
        jPanel2.setMinimumSize(new java.awt.Dimension(802, 100));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Find By");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setText("Cheque No");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/malintha_agency/images/search 30x30.png"))); // NOI18N

        cmb_scm_scn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_scm_scnItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_scm_scn, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(420, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmb_scm_scn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_scm_invoicenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_scm_invoicenoActionPerformed
        LoadChequesToTable();
    }//GEN-LAST:event_cmb_scm_invoicenoActionPerformed

    private void txt_scm_accountnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_scm_accountnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_scm_accountnoActionPerformed

    private void btn_scm_clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_scm_clearMouseClicked
        setClearFields();
    }//GEN-LAST:event_btn_scm_clearMouseClicked

    private void btn_scm_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_scm_saveMouseClicked
        saveCheque();
    }//GEN-LAST:event_btn_scm_saveMouseClicked

    private void tbl_scm_chequesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_scm_chequesMouseClicked
        LoadInToFields();
    }//GEN-LAST:event_tbl_scm_chequesMouseClicked

    private void btn_scm_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_scm_saveActionPerformed
        if (isNotBlank()) {
            saveCheque();
        }
    }//GEN-LAST:event_btn_scm_saveActionPerformed

    private void btn_scm_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_scm_removeActionPerformed
        if (isNotBlank()) {
            remove();
        }
    }//GEN-LAST:event_btn_scm_removeActionPerformed

    private void btn_scm_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_scm_clearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_scm_clearActionPerformed

    private void cmb_scm_invoicenoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_scm_invoicenoKeyPressed

    }//GEN-LAST:event_cmb_scm_invoicenoKeyPressed

    private void cmb_scm_invoicenoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_scm_invoicenoItemStateChanged
        LoadChequesToTable();
    }//GEN-LAST:event_cmb_scm_invoicenoItemStateChanged

    private void cmb_scm_scnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_scm_scnItemStateChanged
        if (loadInvCheqCount > 0) {
            searchChequeLoadToTable();
        }
    }//GEN-LAST:event_cmb_scm_scnItemStateChanged

    private void txt_scm_paymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scm_paymentKeyReleased
        Validation.priceText(txt_scm_payment);
    }//GEN-LAST:event_txt_scm_paymentKeyReleased

    private void txt_scm_accountnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scm_accountnoKeyReleased
        Validation.numberOnly(txt_scm_accountno);
    }//GEN-LAST:event_txt_scm_accountnoKeyReleased

    private void txt_scm_chequenoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scm_chequenoKeyReleased
        Validation.numberOnly(txt_scm_chequeno);
    }//GEN-LAST:event_txt_scm_chequenoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_scm_clear;
    private javax.swing.JButton btn_scm_remove;
    private javax.swing.JButton btn_scm_save;
    private javax.swing.JComboBox<String> cmb_scm_invoiceno;
    private javax.swing.JComboBox<String> cmb_scm_scn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdc_scm_bankingdate;
    private com.toedter.calendar.JDateChooser jdc_scm_reveivedate;
    private javax.swing.JLabel lbl_scm_branch;
    private javax.swing.JLabel lbl_scm_invoiceno;
    private javax.swing.JTable tbl_scm_cheques;
    private javax.swing.JTextField txt_scm_accountno;
    private javax.swing.JTextField txt_scm_branch;
    private javax.swing.JTextField txt_scm_chequeno;
    private javax.swing.JTextField txt_scm_payment;
    // End of variables declaration//GEN-END:variables

    private void saveCheque() {
        if (isEmpty() && isValidate()) {
            try {
                Invoice invoice = new InvoiceController().findInvoiceByInvoiceNO(invoiceno);
                Invoice_Cheque invoicecheque = new Invoice_Cheque(invoice.getInvoiceid(), chequeno, branch, accountno, receivedate, bankingdate, payment);
                boolean issaved = InvoiceChequeController.saveInvoiceCheque(invoicecheque);
                if (issaved) {
                    setClearFields();
                    LoadChequesToTable();
                    loadInvoiceChequestoCombo();
                    setClearFields();
                } else {
                    JOptionPane.showMessageDialog(this, "Unable to manage invoice", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {

            } catch (ClassNotFoundException ex) {

            }
        }
    }

    private boolean isEmpty() {
        if (cmb_scm_invoiceno.getItemCount() > 0) {
            invoiceno = cmb_scm_invoiceno.getSelectedItem().toString();
            branch = txt_scm_branch.getText();
            accountno = Integer.parseInt(txt_scm_accountno.getText());
            chequeno = txt_scm_chequeno.getText();
            receivedate = df.format(jdc_scm_reveivedate.getDate());
            bankingdate = df.format(jdc_scm_bankingdate.getDate());
            payment = Double.parseDouble(txt_scm_payment.getText());
            if (invoiceno.equals("") && branch.equals("") && accountno != 0 && chequeno.equals("")) {
                return false;
            }
            return true;
        }
        return true;
    }

    private boolean isValidate() {
        return true;
    }

    private void onLoad() {
        LoadInvoiceToCombo();
        loadInvoiceChequestoCombo();
    }

    private void LoadInvoiceToCombo() {
        try {
            Invoice[] invoices = InvoiceController.viewInvoices();
            cmb_scm_invoiceno.removeAllItems();
            if (invoices != null && invoices.length > 0) {
                df = new SimpleDateFormat("yyyy-MM-dd");
                for (Invoice i : invoices) {
                    if (i != null) {
                        cmb_scm_invoiceno.addItem(i.getInvoiceno());
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void LoadChequesToTable() {

        dtm = (DefaultTableModel) tbl_scm_cheques.getModel();
        if (cmb_scm_invoiceno.getItemCount() > 0) {
            try {
                invoiceno = cmb_scm_invoiceno.getSelectedItem().toString();
                Invoice invoice = new InvoiceController().findInvoiceByInvoiceNO(invoiceno);
                Invoice_Cheque[] cheques = InvoiceChequeController.findInvoiceBy(invoice.getInvoiceid());
                dtm.setRowCount(0);
                if (cheques != null && cheques.length > 0) {

                    for (Invoice_Cheque ic : cheques) {
                        if (ic != null) {
                            Object[] row = {ic.getBranch(), ic.getAccountno(), ic.getChequeno(), ic.getBankingdate(), ic.getReceivedate(), ic.getPayment(), ic.getInvoiceid(), ic.getInvoice_chequeid()};
                            if (row.length > 0) {
                                dtm.addRow(row);
                            }

                        }
                    }
                }

            } catch (SQLException ex) {
                Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void LoadInToFields() {

        int row = tbl_scm_cheques.getSelectedRow();
        if (row != -1) {
            try {
                //cmb_sim_s.setSelectedItem(dtm.getValueAt(row, 0).toString());
                txt_scm_branch.setText(dtm.getValueAt(row, 0).toString());
                txt_scm_accountno.setText(dtm.getValueAt(row, 1).toString());
                txt_scm_chequeno.setText(dtm.getValueAt(row, 2).toString());
                txt_scm_payment.setText(dtm.getValueAt(row, 5).toString());
                id = (int) dtm.getValueAt(row, 7);
                jdc_scm_bankingdate.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(dtm.getValueAt(row, 3).toString()));
                jdc_scm_reveivedate.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(dtm.getValueAt(row, 4).toString()));
                System.out.println(id);
            } catch (ParseException ex) {
                Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void setClearFields() {

        txt_scm_branch.setText("");
        txt_scm_accountno.setText("");
        txt_scm_chequeno.setText("");
        txt_scm_payment.setText("0.00");

    }

    public void remove() {
        if (id != -1) {
            try {
                boolean isremoved = InvoiceChequeController.removeById(id);
                if (isremoved) {
                    setClearFields();
                    LoadChequesToTable();
                    JOptionPane.showMessageDialog(this, "Cheque is removed", "Successfull", JOptionPane.INFORMATION_MESSAGE);
                    LoadChequesToTable();
                    setClearFields();
                } else {
                    JOptionPane.showMessageDialog(this, "Database Failed", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void loadInvoiceChequestoCombo() {
        try {
            loadInvCheqCount = 0;
            Invoice_Cheque[] cheques = InvoiceChequeController.loadInvoice();
            if (cheques != null) {
                cmb_scm_scn.removeAllItems();
                for (Invoice_Cheque ic : cheques) {
                    if (ic != null) {
                        cmb_scm_scn.addItem(ic.getChequeno());
                    }
                }
            }
            loadInvCheqCount++;
        } catch (SQLException ex) {
            Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void searchChequeLoadToTable() {

        try {
            Invoice_Cheque[] cheques = InvoiceChequeController.findChequeInfoByChequeNo(cmb_scm_scn.getSelectedItem().toString());
            if (cheques != null && cheques.length > 0) {
                dtm.setRowCount(0);
                for (Invoice_Cheque ic : cheques) {
                    if (ic != null) {
                        Object[] row = {ic.getBranch(), ic.getAccountno(), ic.getChequeno(), ic.getBankingdate(), ic.getReceivedate(), ic.getPayment(), ic.getInvoiceid(), ic.getInvoice_chequeid()};

                        dtm.addRow(row);

                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ArrayIndexOutOfBoundsException ex) {
            Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            Logger.getLogger(Stock_Cheque_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private boolean isNotBlank() {
        return (!txt_scm_accountno.getText().equals("") && !txt_scm_branch.getText().equals("") && !txt_scm_chequeno.getText().equals("") && !txt_scm_payment.getText().equals("") && !cmb_scm_invoiceno.getSelectedItem().equals(""));
    }
}
