/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.malintha_agency.views;

import com.malintha_agency.controller.InvoiceController;
import com.malintha_agency.controller.ProductController;
import com.malintha_agency.model.Invoice;
import com.malintha_agency.model.Invoice_Product;
import com.malintha_agency.model.ProductInfo;
import com.malintha_agency.view.validation.Validation;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ZeeLot
 */
public class Stock_Product_Manager extends javax.swing.JPanel {

    private int loadProductsCount = 0;
    private String invoiceno;
    private String d;
    private DefaultTableModel dtm;
    private int id = -1;
    private ArrayList<ProductInfo> productinfo;
    String productname = "";

    /**
     * Creates new form Stock_InvoiceProduct_Manager
     */
    public Stock_Product_Manager() {
        initComponents();
        dtm = (DefaultTableModel) tbl_spm_pro.getModel();
        if (cmb_spm_invo.getItemCount() > 0 && cmb_spm_pro.getItemCount() > 0) {
            invoiceno = cmb_spm_invo.getItemAt(0);
            productname = cmb_spm_pro.getItemAt(0);
        }
        tbl_spm_pro.removeColumn(tbl_spm_pro.getColumnModel().getColumn(4));
        onLoad();
        loadTable();
        loadproductcombo();
        AutoCompleteDecorator.decorate(cmb_spm_invo);
        AutoCompleteDecorator.decorate(cmb_spm_pro);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_spm_pro = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmb_spm_invo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_spm_bp = new javax.swing.JTextField();
        cmb_spm_pro = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        txt_spm_sp = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_spm_qty = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jPanel2.setBackground(new java.awt.Color(78, 44, 211));
        jPanel2.setPreferredSize(new java.awt.Dimension(802, 100));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/malintha_agency/images/new product.png"))); // NOI18N
        jLabel4.setText("  New Product");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(593, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setOpaque(false);

        tbl_spm_pro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Buying Price", "Selling Price", "Qty", "ProID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_spm_pro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_spm_proMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_spm_pro);
        if (tbl_spm_pro.getColumnModel().getColumnCount() > 0) {
            tbl_spm_pro.getColumnModel().getColumn(0).setResizable(false);
            tbl_spm_pro.getColumnModel().getColumn(1).setResizable(false);
            tbl_spm_pro.getColumnModel().getColumn(2).setResizable(false);
            tbl_spm_pro.getColumnModel().getColumn(3).setResizable(false);
            tbl_spm_pro.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Invoice No");

        cmb_spm_invo.setEditable(true);
        cmb_spm_invo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_spm_invoItemStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Product");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Buying Price");

        txt_spm_bp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_spm_bp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_spm_bpKeyReleased(evt);
            }
        });

        cmb_spm_pro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_spm_proItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(cmb_spm_invo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(22, 22, 22))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(53, 53, 53)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_spm_bp, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(cmb_spm_pro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmb_spm_invo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(cmb_spm_pro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_spm_bp, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        txt_spm_sp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_spm_sp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_spm_spKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Selling Price");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("QTY");

        txt_spm_qty.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_spm_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_spm_qtyKeyReleased(evt);
            }
        });

        jButton4.setText("Remove");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_spm_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_spm_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_spm_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_spm_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton2))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        Stock_Product_New_Product new_Product = new Stock_Product_New_Product();
        new_Product.setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (isNotBlank()) {
            save();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmb_spm_proItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_spm_proItemStateChanged
        loadProductInfoToFields();
    }//GEN-LAST:event_cmb_spm_proItemStateChanged

    private void tbl_spm_proMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_spm_proMouseClicked
        select();
    }//GEN-LAST:event_tbl_spm_proMouseClicked

    private void cmb_spm_invoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_spm_invoItemStateChanged
        if (loadProductsCount > 0) {
            loadTable();
        }
    }//GEN-LAST:event_cmb_spm_invoItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (isNotBlank()) {
            remove();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txt_spm_spKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_spm_spKeyReleased
        Validation.priceText(txt_spm_sp);
    }//GEN-LAST:event_txt_spm_spKeyReleased

    private void txt_spm_qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_spm_qtyKeyReleased
        Validation.numberOnly(txt_spm_qty);
    }//GEN-LAST:event_txt_spm_qtyKeyReleased

    private void txt_spm_bpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_spm_bpKeyReleased
        Validation.priceText(txt_spm_bp);
    }//GEN-LAST:event_txt_spm_bpKeyReleased

    private void onLoad() {

        loadsearchinvobox();
        loadproductcombo();
        firstLoadProductInfoToFields();
        //loadTable();
    }

    private void save() {
        if (cmb_spm_invo.getItemCount() > 0) {
            try {
                invoiceno = cmb_spm_invo.getSelectedItem().toString();
                productname = cmb_spm_pro.getSelectedItem().toString();
                Invoice invoice = new InvoiceController().findInvoiceByInvoiceNO(invoiceno);
                Invoice_Product product = new Invoice_Product(invoice.getInvoiceid(), productname, Double.parseDouble(txt_spm_bp.getText()), Double.parseDouble(txt_spm_sp.getText()), Integer.parseInt(txt_spm_qty.getText()), invoice.getIssuedate());
                boolean isok = ProductController.saveProduct(product);
                if (isok) {
                    loadTable();
                    clear();
                    JOptionPane.showMessageDialog(this, "Product saved", "Successfull", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Product can't save", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NullPointerException ex) {
                Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void loadsearchinvobox() {
        try {
            Invoice[] invoices = InvoiceController.viewInvoices();
            if (invoices != null) {
                cmb_spm_invo.removeAllItems();
                for (Invoice i : invoices) {
                    if (i != null) {
                        cmb_spm_invo.addItem(i.getInvoiceno());
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ArrayIndexOutOfBoundsException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadproductcombo() {
        try {
            loadProductsCount = 0;
            ProductInfo[] pis = ProductController.viewProducts();
            productinfo = new ArrayList<>();
            cmb_spm_pro.removeAllItems();
            for (ProductInfo pi : pis) {
                if (pi != null && !pi.getProductname().equals("")) {
                    cmb_spm_pro.addItem(pi.getProductname());
                    productinfo.add(pi);
                }
            }
            loadProductsCount++;
        } catch (SQLException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ArrayIndexOutOfBoundsException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadProductInfoToFields() {
        if (cmb_spm_pro.getItemCount() > 0) {
            String proname = cmb_spm_pro.getSelectedItem().toString();
            for (ProductInfo pinfo : productinfo) {
                if (pinfo.getProductname().equals(proname)) {
                    txt_spm_bp.setText(Double.toString(pinfo.getBuyingprice()));
                    txt_spm_sp.setText(Double.toString(pinfo.getSellingprice()));

                }
            }
        }
    }

    private void firstLoadProductInfoToFields() {
        if (cmb_spm_pro.getItemCount() > 0) {
            String proname = cmb_spm_pro.getItemAt(0);
            for (ProductInfo pinfo : productinfo) {
                if (pinfo.getProductname().equals(proname)) {
                    txt_spm_bp.setText(Double.toString(pinfo.getBuyingprice()));
                    txt_spm_sp.setText(Double.toString(pinfo.getSellingprice()));

                }
            }
        }
    }

    private void loadTable() {
        try {
            //String productname = cmb_spm_pro.getSelectedItem().toString();
            invoiceno = cmb_spm_invo.getSelectedItem().toString();
            Invoice invoice = new InvoiceController().findInvoiceByInvoiceNO(invoiceno);
            Invoice_Product[] products = ProductController.findProductByInvoiceID(invoice.getInvoiceid());
            System.err.println(products.length);
            if (products != null) {
                dtm.setRowCount(0);
                for (Invoice_Product ip : products) {
                    if (ip != null) {
                        Object[] row = {ip.getProductname(), ip.getBuyingprice(), ip.getSellingprice(), ip.getQty(), ip.getInvoice_productid()};
                        dtm.addRow(row);
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void select() {
        try {
            int row = tbl_spm_pro.getSelectedRow();
            if (row != -1) {
                id = Integer.parseInt(dtm.getValueAt(row, 4).toString());
                txt_spm_bp.setText(dtm.getValueAt(row, 1).toString());
                txt_spm_sp.setText(dtm.getValueAt(row, 2).toString());
                txt_spm_qty.setText(dtm.getValueAt(row, 3).toString());
                cmb_spm_pro.setSelectedItem(dtm.getValueAt(row, 0).toString());
                System.out.println(id);
            }
        } catch (NullPointerException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ArrayIndexOutOfBoundsException ex) {
            Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void remove() {
        if (id != -1) {
            try {
                boolean isok = ProductController.removeProduct(id);
                if (isok) {
                    id = -1;
                    loadTable();
                    clear();
                    JOptionPane.showMessageDialog(this, "Product removed", "Successfull", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Product can't delete", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Stock_Product_Manager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void clear() {
        txt_spm_sp.setText("0.00");
        txt_spm_bp.setText("0.00");
        txt_spm_qty.setText("0");
        if (cmb_spm_pro.getItemCount() > 0) {
            cmb_spm_pro.setSelectedIndex(0);
        }
        if (cmb_spm_invo.getItemCount() > 0) {
            cmb_spm_invo.setSelectedIndex(0);
        }

    }

    private boolean isNotBlank() {
        return (!txt_spm_bp.getText().equals("") && !txt_spm_qty.getText().equals("") && !txt_spm_sp.getText().equals("") && !cmb_spm_invo.getSelectedItem().equals("") && !cmb_spm_pro.getSelectedItem().equals(""));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_spm_invo;
    private javax.swing.JComboBox<String> cmb_spm_pro;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_spm_pro;
    private javax.swing.JTextField txt_spm_bp;
    private javax.swing.JTextField txt_spm_qty;
    private javax.swing.JTextField txt_spm_sp;
    // End of variables declaration//GEN-END:variables
}
