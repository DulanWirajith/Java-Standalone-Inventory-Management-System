/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.malintha_agency.views;

import com.malintha_agency.controller.UserController;
import com.malintha_agency.model.Users;
import java.net.URL;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class ManageUsers extends javax.swing.JFrame {

    private static String un;
    private static String pass;
    private static String role;
    private static String cpass;
    private int id = -1;
    private DefaultTableModel dtm;

    /**
     * Creates new form ManageUsers
     */
    public ManageUsers() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Malintha Distributors");
        icon();
        dtm = (DefaultTableModel) tbl_mu_users.getModel();
        LoadUserTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_mu_un = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmb_mu_role = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txt_mu_p = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_mu_cp = new javax.swing.JTextField();
        btn_mu_save = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_mu_users = new javax.swing.JTable();
        btn_mu_remove = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("User Name");

        jLabel2.setText("Role");

        cmb_mu_role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Guest" }));

        jLabel3.setText("Password");

        jLabel4.setText("Confirm Password");

        btn_mu_save.setText("Save");
        btn_mu_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mu_saveActionPerformed(evt);
            }
        });

        tbl_mu_users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Password", "Role", "UID"
            }
        ));
        tbl_mu_users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_mu_usersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_mu_users);

        btn_mu_remove.setText("Remove");
        btn_mu_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mu_removeActionPerformed(evt);
            }
        });

        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(18, 18, 18)
                            .addComponent(btn_mu_remove)
                            .addGap(18, 18, 18)
                            .addComponent(btn_mu_save))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_mu_un)
                                    .addComponent(cmb_mu_role, 0, 240, Short.MAX_VALUE)
                                    .addComponent(txt_mu_p)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_mu_cp))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_mu_un, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmb_mu_role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_mu_p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_mu_cp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_mu_save)
                    .addComponent(btn_mu_remove)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_mu_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mu_saveActionPerformed
        if (isNotBlank()) {
            saveUser();
        }
    }//GEN-LAST:event_btn_mu_saveActionPerformed

    private void tbl_mu_usersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_mu_usersMouseClicked
        selectAndLoad();
    }//GEN-LAST:event_tbl_mu_usersMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (isNotBlank()) {
            edit();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_mu_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mu_removeActionPerformed
        if (isNotBlank()) {
            removeuser();
        }
    }//GEN-LAST:event_btn_mu_removeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUsers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_mu_remove;
    private javax.swing.JButton btn_mu_save;
    private javax.swing.JComboBox<String> cmb_mu_role;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tbl_mu_users;
    private javax.swing.JTextField txt_mu_cp;
    private javax.swing.JTextField txt_mu_p;
    private javax.swing.JTextField txt_mu_un;
    // End of variables declaration//GEN-END:variables

    private void saveUser() {
        un = txt_mu_un.getText();
        pass = txt_mu_p.getText();
        cpass = txt_mu_cp.getText();
        role = cmb_mu_role.getSelectedItem().toString();

        if (!un.equals("") && !pass.equals("") && !cpass.equals("")) {
            if (pass.equals(cpass)) {
                try {
                    Users user = new Users();
                    user.setUsername(un);
                    user.setPassword(pass);
                    user.setRole(role);

                    boolean isokay = UserController.saveNewUser(user);
                    if (isokay) {
                        clearFields();
                        LoadUserTable();
                        System.out.println("Saved");
                    } else {
                        System.out.println("Bug occured");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                //pass and cpass doesnt match 
            }
        } else {
            //check all fields are fill
        }

    }

    private void LoadUserTable() {
        try {
            Users[] users = UserController.getAllUsers();
            dtm.setRowCount(0);
            if (users != null) {
                for (Users u : users) {
                    if (u != null) {
                        Object[] row = {u.getUsername(), u.getPassword(), u.getRole(), u.getUid()};
                        dtm.addRow(row);
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void selectAndLoad() {
        int row = tbl_mu_users.getSelectedRow();
        if (row != -1) {
            txt_mu_un.setText(dtm.getValueAt(row, 0).toString());
            cmb_mu_role.setSelectedItem(dtm.getValueAt(row, 2).toString());
            id = (int) dtm.getValueAt(row, 3);
            System.out.println(id);
        }

    }

    private void edit() {

        if (id != -1) {
            un = txt_mu_un.getText();
            pass = txt_mu_p.getText();
            cpass = txt_mu_cp.getText();
            role = cmb_mu_role.getSelectedItem().toString();

            if (!un.equals("") && !pass.equals("") && !cpass.equals("")) {
                if (pass.equals(cpass)) {
                    try {
                        Users user = new Users();
                        user.setUid(id);
                        user.setUsername(un);
                        user.setPassword(pass);
                        user.setRole(role);

                        boolean isokay = UserController.modifyUser(user);
                        if (isokay) {
                            clearFields();
                            LoadUserTable();
                            System.out.println("Updated");
                        } else {
                            System.out.println("Bug occured");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    //pass and cpass doesnt match 
                }
            } else {
                //check all fields are fill
            }
        }

    }

    public void removeuser() {
        if (id != -1) {
            try {
                boolean isdelete = UserController.removeUser(id);
                if (isdelete) {
                    clearFields();
                    LoadUserTable();
                } else {

                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    public void clearFields() {
        txt_mu_un.setText("");
        txt_mu_p.setText("");
        txt_mu_cp.setText("");
        cmb_mu_role.setSelectedIndex(0);
    }

    private boolean isNotBlank() {
        return (!txt_mu_cp.getText().equals("") && !txt_mu_p.getText().equals("") && !txt_mu_un.getText().equals("") && !cmb_mu_role.getSelectedItem().equals(""));
    }
    
    private void icon(){
        URL iconURL=this.getClass().getResource("/com/malintha_agency/images/logo logo.jpg");
        ImageIcon imageIcon=new ImageIcon(iconURL);
        setIconImage(imageIcon.getImage());
    }
}
