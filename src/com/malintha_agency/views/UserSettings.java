/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.malintha_agency.views;

import com.malintha_agency.controller.UserController;
import com.malintha_agency.model.Users;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ZeeLot
 */
public class UserSettings extends javax.swing.JPanel {

    private static String un;
    private static String pass;
    private static String role;
    private static String cpass;
    private int id = -1;
    private DefaultTableModel dtm;

    /**
     * Creates new form UserSettings
     */
    public UserSettings() {
        initComponents();
        dtm = (DefaultTableModel) tbl_mu_users.getModel();
        LoadUserTable();
        AutoCompleteDecorator.decorate(cmb_mu_role);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmb_mu_role = new javax.swing.JComboBox<>();
        txt_mu_un = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_mu_p = new javax.swing.JPasswordField();
        txt_mu_cp = new javax.swing.JPasswordField();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_mu_users = new javax.swing.JTable();

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Role");

        cmb_mu_role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Guest" }));

        txt_mu_un.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("User Name");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Password");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Confirm Password");

        txt_mu_cp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mu_cpActionPerformed(evt);
            }
        });

        jButton4.setText("Remove");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setText("Edit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(62, 62, 62)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_mu_un, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(cmb_mu_role, 0, 195, Short.MAX_VALUE)
                            .addComponent(txt_mu_p)
                            .addComponent(txt_mu_cp))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmb_mu_role, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_mu_un, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_mu_p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt_mu_cp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)))
        );

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        tbl_mu_users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Password", "Role", "UID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_mu_users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_mu_usersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_mu_users);
        if (tbl_mu_users.getColumnModel().getColumnCount() > 0) {
            tbl_mu_users.getColumnModel().getColumn(0).setResizable(false);
            tbl_mu_users.getColumnModel().getColumn(1).setResizable(false);
            tbl_mu_users.getColumnModel().getColumn(2).setResizable(false);
            tbl_mu_users.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_mu_cpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mu_cpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mu_cpActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (isNotBlank()) {
            saveUser();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // selectAndLoad() ;
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (isNotBlank()) {
            edit();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (isNotBlank()) {
            removeuser();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tbl_mu_usersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_mu_usersMouseClicked
        selectAndLoad();
    }//GEN-LAST:event_tbl_mu_usersMouseClicked

    private void saveUser() {
        un = txt_mu_un.getText();
        pass = txt_mu_p.getText();
        cpass = txt_mu_cp.getText();
        role = cmb_mu_role.getSelectedItem().toString();

        if (!un.equals("") && !pass.equals("") && !cpass.equals("")) {
            if (pass.equals(cpass)) {
                try {
                    Users user = new Users();
                    user.setUsername(un);
                    user.setPassword(pass);
                    user.setRole(role);

                    boolean isokay = UserController.saveNewUser(user);
                    if (isokay) {
                        clearFields();
                        LoadUserTable();
                        System.out.println("Saved");
                    } else {
                        System.out.println("Bug occured");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(UserSettings.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(UserSettings.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                //pass and cpass doesnt match 
            }
        } else {
            //check all fields are fill
        }

    }

    private void LoadUserTable() {
        try {
            Users[] users = UserController.getAllUsers();
            dtm.setRowCount(0);
            if (users != null) {
                for (Users u : users) {
                    if (u != null) {
                        Object[] row = {u.getUsername(), u.getPassword(), u.getRole(), u.getUid()};
                        dtm.addRow(row);
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void selectAndLoad() {
        int row = tbl_mu_users.getSelectedRow();
        if (row != -1) {
            txt_mu_un.setText(dtm.getValueAt(row, 0).toString());
            cmb_mu_role.setSelectedItem(dtm.getValueAt(row, 2).toString());
            id = (int) dtm.getValueAt(row, 3);
            System.out.println(id);
        }

    }

    private void edit() {

        if (id != -1) {
            un = txt_mu_un.getText();
            pass = txt_mu_p.getText();
            cpass = txt_mu_cp.getText();
            role = cmb_mu_role.getSelectedItem().toString();

            if (!un.equals("") && !pass.equals("") && !cpass.equals("")) {
                if (pass.equals(cpass)) {
                    try {
                        Users user = new Users();
                        user.setUid(id);
                        user.setUsername(un);
                        user.setPassword(pass);
                        user.setRole(role);

                        boolean isokay = UserController.modifyUser(user);
                        if (isokay) {
                            clearFields();
                            LoadUserTable();
                            System.out.println("Updated");
                        } else {
                            System.out.println("Bug occured");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    //pass and cpass doesnt match 
                }
            } else {
                //check all fields are fill
            }
        }

    }

    public void removeuser() {
        if (id != -1) {
            try {
                boolean isdelete = UserController.removeUser(id);
                if (isdelete) {
                    clearFields();
                    LoadUserTable();
                } else {

                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ManageUsers.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    public void clearFields() {
        txt_mu_un.setText("");
        txt_mu_p.setText("");
        txt_mu_cp.setText("");
        cmb_mu_role.setSelectedIndex(0);
    }

    private boolean isNotBlank() {
        return (!txt_mu_cp.getText().equals("") && !txt_mu_p.getText().equals("") && !txt_mu_un.getText().equals("") && !cmb_mu_role.getSelectedItem().equals(""));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_mu_role;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_mu_users;
    private javax.swing.JPasswordField txt_mu_cp;
    private javax.swing.JPasswordField txt_mu_p;
    private javax.swing.JTextField txt_mu_un;
    // End of variables declaration//GEN-END:variables
}
